/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution
{
public:
    Node *copyRandomList(Node *head)
    {

        unordered_map<Node *, Node *> mp;
        Node *headNew = NULL, *curr = head, *currNew;

        while (curr)
        {
            Node *temp = new Node(curr->val);
            mp[curr] = temp;
            curr = curr->next;
            if (!headNew)
            {
                headNew = temp;
            }
            else
            {
                currNew->next = temp;
            }
            currNew = temp;
        }
        currNew = headNew;
        curr = head;
        while (curr)
        {
            Node *randOld = curr->random;
            Node *randNew = mp[randOld];
            currNew->random = randNew;
            currNew = currNew->next;
            curr = curr->next;
        }
        return headNew;
    }
};

/*
Time complexity = O(n)
Space complexity = O(n)
*/