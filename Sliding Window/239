class Solution
{
public:
    vector<int> maxSlidingWindow(vector<int> &nums, int k)
    {
        priority_queue<pair<int, int>> pq;
        vector<int> ans;
        for (int i = 0; i < k; i++)
        {
            pq.push(make_pair(nums[i], i));
        }
        ans.push_back(pq.top().first);
        for (int i = k; i < nums.size(); i++)
        {
            int start = i - k + 1, end = i;
            pq.push(make_pair(nums[i], i));
            pair<int, int> currTop = pq.top();
            while (currTop.second < start)
            {
                pq.pop();
                currTop = pq.top();
            }
            ans.push_back(pq.top().first);
        }
        return ans;
    }
};