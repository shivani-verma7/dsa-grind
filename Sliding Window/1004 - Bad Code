class Solution {
public:
    int longestOnes(vector<int>& nums, int k) {
        int ans=0;
        vector<int> posZeros;
        for(int i=0;i<nums.size();i++){
            if(nums[i]==0){
                posZeros.push_back(i);
                if(k==0 && posZeros.size()==1)
                    ans = max(ans,i);
                else if(k==0)
                    ans = max(ans,i-posZeros[posZeros.size()-2]-1);
            }
            else if(i==nums.size()-1 && k==0){
                if(posZeros.size())
                    ans = max(ans,i-posZeros[posZeros.size()-1]);
                else
                    ans = max(ans,i+1);
            }
        }
        if(k==0)
            return ans;
        if(k>=posZeros.size())
            return nums.size();
        for(int i=0;i<=posZeros.size()-k;i++){
            int pre, post, middle;
            int startsAt = posZeros[i];
            int endsAt = posZeros[i+k-1];
            if(startsAt==0)
                pre=0;
            else if(i==0)
                pre=posZeros[i];
            else
                pre=posZeros[i]-posZeros[i-1]-1;
            if(endsAt==nums.size()-1)
                post=0;
            else if(i+k==posZeros.size())
                post=nums.size()-1-posZeros[i+k-1];
            else
                post=posZeros[i+k]-posZeros[i+k-1]-1;
            middle = endsAt-startsAt-1;
            int var;
            if(k==1)
                var=1;
            else
                var=2;
            ans = max(ans,pre+middle+post+var);
        }
        return ans;
    }
};