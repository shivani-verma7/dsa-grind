class Solution
{
public:
    vector<vector<int>> threeSum(vector<int> &nums)
    {
        vector<vector<int>> triplets;
        sort(nums.begin(), nums.end());
        int i = 0;
        while (i < nums.size() - 2)
        {
            int target = -1 * nums[i];
            int start = i + 1, end = nums.size() - 1;
            if (i > 0 && nums[i] == nums[i - 1])
            {
                i++;
                continue;
            }
            while (start < end)
            {
                int sum = nums[start] + nums[end];
                if (sum == target)
                {
                    vector<int> temp = {nums[i], nums[start], nums[end]};
                    triplets.push_back(temp);
                    start++;
                    end--;
                    while (start < end && nums[start] == nums[start - 1])
                        start++;
                    while (start < end && nums[end] == nums[end + 1])
                        end--;
                }
                else if (sum > target)
                    end--;
                else
                    start++;
            }
            i++;
        }
        return triplets;
    }
};