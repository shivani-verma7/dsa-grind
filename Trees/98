/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    bool compareInorder(TreeNode *T, TreeNode* &prev){
    if(!T)
        return true;
    bool left = compareInorder(T->left, prev);
    if(prev && prev->val<T->val)
        prev = T;
    else if(!prev)
        prev = T;
    else
        return false;
    bool right = compareInorder(T->right, prev);
    return left && right;
}
public:
    bool isValidBST(TreeNode* root) {
        TreeNode *temp = NULL;
        return compareInorder(root,temp);
    }
};
/*
Time complexity = O(n)
Space complexity = O(n)
*/