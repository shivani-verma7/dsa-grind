/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    void maxSum(TreeNode* T, int &sumOne,int &maxm){
        if(!T){
            sumOne=0;
            return;
        }
        int l=0,r=0;
        maxSum(T->left,l,maxm);
        maxSum(T->right,r,maxm);
        sumOne = max(T->val,T->val + max(l,r));
        int sumBoth = T->val + l + r;
        maxm = max(maxm,max(sumOne,sumBoth));
    }
public:
    int maxPathSum(TreeNode* root) {
        int ans = INT_MIN, sum = 0;
        maxSum(root,sum,ans);
        return ans;
    }
};
/*
Time complexity = O(n)
Space complexity = O(n)
*/