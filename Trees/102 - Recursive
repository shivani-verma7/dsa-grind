/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    void traverse(TreeNode *T,int level, vector<vector<int>> &ans){
        if(!T)
            return;
        if(ans.size()<level+1){
            vector<int> v;
            v.push_back(T->val);
            ans.push_back(v);
        }
        else{
            ans[level].push_back(T->val);
        }
        traverse(T->left,level+1,ans);
        traverse(T->right,level+1,ans);
    }
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        int level = 0;
        traverse(root,level,ans);
        return ans;
    }
};
/*
Time complexity = O(n)
Space complexity = O(n)
*/