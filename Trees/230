/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    void find(TreeNode *T,int k,int &pos,int &val){
        if(!T)
            return;
        find(T->left,k,pos,val);
        pos++;
        if(pos==k){
            val=T->val;
            return;
        }
        find(T->right,k,pos,val);
    }
public:
    int kthSmallest(TreeNode* root, int k) {
        int pos = 0, val;
        find(root,k,pos,val);
        return val;
    }
};
/*
Time Complexity = O(n)
Space Complexity = O(n)
*/