class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n = nums.size();
        vector<int> ans(n);
        int prefix[n], suffix[n];
        prefix[0]=nums[0];
        suffix[n-1]=nums[n-1];
        for(int i=1;i<n;i++){
            int j = n-1-i;
            prefix[i]=prefix[i-1]*nums[i];
            suffix[j]=suffix[j+1]*nums[j];
        }
        ans[0]=suffix[1];
        ans[n-1]=prefix[n-2];
        
        for(int i=1;i<n-1;i++){
            ans[i]=prefix[i-1]*suffix[i+1];
        }
        return ans;
    }
};
/*
Time complexity = O(n)
Space complexity = O(n)
*/