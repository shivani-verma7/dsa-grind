class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ans;
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size();i++){
            int j=i+1, k=nums.size()-1;
            if(i>0 && nums[i-1]==nums[i])
                continue;
            while(j<k){
                if(k<nums.size()-1 && nums[k]==nums[k+1])
                    k--;
                else if(nums[i]+nums[j]+nums[k]>0)
                    k--;
                else if(nums[i]+nums[j]+nums[k]<0)
                    j++;
                else if(nums[i]+nums[j]+nums[k]==0){
                    vector<int> v;
                    v.push_back(nums[i]);
                    v.push_back(nums[j]);
                    v.push_back(nums[k]);
                    ans.push_back(v);
                    j++;
                    k--;
                }
            }
        }
        return ans;
    }
};
/*
Time complexity = O(n^2)
Space complexity = O(1)
*/